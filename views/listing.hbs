<!---------- Modal w/ Filters, Search Settings ----------->
<div class="fixed-action-btn">
  <a id="filter-menu" class="btn-floating btn-large orange darken-1 tooltipped" href="#filter-modal">
    <i class="large material-icons blue-grey-text darken-2">filter_list</i>
  </a>
</div>

<div id="filter-modal" class="modal bottom-sheet">
  <div class="modal-content blue-grey darken-2">
    <h2 class="center-align">SEARCH FILTERS</h2>
    <form id="filter" onsubmit="checkFilter(); return false;">
      <div class="switch">

        <!----- Diet Options --->
        <div class="row">
          <p>dietary restrictions</p>
          <div class="col s6">
            <label for="vegetarian possible">
              <input id="vegetarian possible" type="checkbox" name="diet_rest" value="2"/>
              <span class="lever"></span>
              vegetarian
            </label>
          </div>
          <div class="col s6">
            <label for="vegan">
              <input id="vegan" type="checkbox" name="diet_rest" value="3"/>
              <span class="lever"></span>
              vegan
            </label>
          </div>
          <br><br>
          <div class="col s6">
            <label for="gluten free">
              <input id="gluten free" type="checkbox" name="diet_rest" value="1"/>
              <span class="lever"></span>
              gluten free
            </label>
          </div>
          <div class="col s6">
            <label for="low carb">
              <input id="low carb" type="checkbox" name="diet_rest" value="5"/>
              <span class="lever"></span>
              low carb
            </label>
          </div>
          <br><br>
          <div class="col s6">
            <label for="halal/kosher">
              <input id="halal/kosher" type="checkbox" name="diet_rest" value="4"/>
              <span class="lever"></span>
              halal/kosher
            </label>
          </div>
        </div><!-- .row -->
      </div><!-- .switch -->
      <br>

      <!---- Restaurant Atmosphere ---->
      <!-- NOTE: User-test whether these should default to checked -->
      <div class="row">
        <p>restaurant atmosphere</p>
        <div class="col s4">
          <input checked="checked" id="dive" type="checkbox" name="atmosphere" value="dive"/>
          <label for="dive">dive</label>
        </div>
        <div class="col s4">
          <input checked="checked" id="casual" type="checkbox" name="atmosphere" value="casual"/>
          <label for="casual">casual</label>
        </div>
        <div class="col s4">
          <input checked="checked" id="fancy" type="checkbox" name="atmosphere" value="fancy"/>
          <label for="fancy">fancy</label>
        </div>
      </div><!-- .row -->
      <br><br>

      <!---- Restaurant Hours ---->
      <div class="row">
        <!---- Service Speed ---->
        <div class="col s3 left-align">
          fast service
        </div>
        <div class="col s3 right-align">
          slow service
        </div>
      </div><!-- .row -->
      <div class="row">
        <div class="col s6">
          <p class="range-field">
            <!-- checked property included for ease of selecting w/ JS -->
            <input checked="checked" type="range" id="food quickness" name="food_quickness" min="1" max="3" value="3" />
          </p>
        </div>
      </div><!-- .row -->
      <br>
      <div class="row">
        <div class="switch">
            <label for="open now">
              <input id="open now" type="checkbox" name="open_now" value="open"/>
              <span class="lever"></span>
              open right now</label>
          </div><!-- .switch -->
      </div><!-- .row -->
      <br>

      <div class="row center-align">
        <input type="submit" value="apply filters" class="modal-action modal-close btn">
      </div>

    </form>
  </div><!-- .modal-content -->
</div><!--. filter-modal -->

<!--------------- Main Content --------------->
<div class="container">
  <div class="row">
    <div class="col s12">
      <h1>results for '{{term}}'</h1>
    </div>
  </div><!-- .row -->


  <select id="select_order_by" name="order_by" onchange="orderBy(); return false;">
    <option value="">order results by...</option>
    <option value="rating">rating</option>
    <option value="distance">distance</option>
  </select>

  <div class="divider"></div>
  <ul id="listing">
    {{> list}}
  </ul>

</div><!-- .container -->

<!------------------- SCRIPTS ------------------->
<script src="/static/js/axios.min.js"></script>

<script>

    // function to check which filter was selected and pass it to the backend using axios
    // receives html back and replace the content from the element with id = "listing"
    function checkFilter (){
      var data = {diet_rest: [], atmosphere: [], open_now: [], food_quickness: []};
      var list = [];
      // gets all input elements inside the form with id = "filter"
      var elements = document.getElementById("filter").elements;
      // loops through all input elements minus the submit input
      for (var i=0; i < elements.length-1; i++){
        // if the element is checked, adds it to the data to be sent to the backend
        if(elements[i].checked){
          data[elements[i].getAttribute("name")].push(elements[i].value);
        }
      }
      // sends the data to the filter view and receives back text with the html to be rendered
      axios.post("/filter/", data, {responseType: 'text'})
        .then(function(result){
          // replaces the content from the element with id = "listing" with the filtered data
          document.getElementById('listing').innerHTML = result.data;
          // Improve user experience; return to top after applying filters
          window.scrollTo(0, 0);
        })
      return false;
    }

    // Get user location through the browser
    var getPosition = function (options) {
      return new Promise(function (resolve, reject) {
        navigator.geolocation.getCurrentPosition(resolve, reject, options);
      });
    }

    // function to order the results by distance or by ratings, it's called when the user changes the selection on the select menu
    function orderBy (){
      // gets the value of the select menu
      var select = document.getElementById("select_order_by").value;
      // adds the value to the data to be sent to backend
      var data = {order: select};
      // if the user orders by distance
      if (select === "distance"){
        // if sessionStorage already contains lat and long
        if (sessionStorage.getItem("lat") && sessionStorage.getItem("long")){
          // sends the data to the backend
          data["lat"] = sessionStorage.getItem("lat");
          data["long"] = sessionStorage.getItem("long");
          // sends the data to order_by view and receives back text with the html to be rendered
          axios.post("/order_by/", data, {responseType: "text"})
            .then((result) => {
              // replaces the content from the element with id = "listing" with the ordered data
              document.getElementById('listing').innerHTML = result.data;
            })
            .catch((err) => {
              console.error(err.message);
            });
        }
        else{
          // if the lat and long are not stored in the sessionStorage, gets the user position through its browser
          getPosition()
            .then((position) => {
              // sends the data to the backend
              data["lat"] = position.coords.latitude;
              data["long"] = position.coords.longitude;
              // stores the lat and long in the sessionStorage
              sessionStorage.setItem("lat", position.coords.latitude);
              sessionStorage.setItem("long", position.coords.longitude);
              // sends the data to order_by view and receives back text with the html to be rendered
              return axios.post("/order_by/", data, {responseType: "text"})
            })
            .then((result) => {
                // replaces the content from the element with id = "listing" with the ordered data
                document.getElementById('listing').innerHTML = result.data;
              })
            .catch((err) => {
              console.error(err.message);
            });
          }
    }
      // if the user orders by rating
      else if (select === "rating"){
        // sends the data to the backend, data = {order: select};
        axios.post("/order_by/", data, {responseType: "text"})
          .then(function(result){
            // replaces the content from the element with id = "listing" with the ordered data
            document.getElementById('listing').innerHTML = result.data;
          })
          .catch(function(error){
            console.error(error);
          })
      }
    }
</script>
